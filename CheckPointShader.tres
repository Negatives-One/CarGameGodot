[gd_resource type="VisualShader" load_steps=6 format=2]

[ext_resource path="res://CheckpointTexture.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorUniform" id=10]
uniform_name = "CurrentColor"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=13]
output_port_for_preview = 0
operator = 2

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible, unshaded, shadows_disabled;

uniform vec4 CurrentColor : hint_color;
uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = CurrentColor.rgb;
	float n_out2p1 = CurrentColor.a;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorOp:4
	vec3 n_out4p0 = n_out2p0 * n_out6p0;

// ScalarOp:7
	float n_out7p0 = n_out2p1 * dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333));

// Output:0
	ALBEDO = n_out4p0;
	ALPHA = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -175.799, 22.6386 )
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 380, 100 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -360, 180 )
nodes/fragment/4/node = SubResource( 11 )
nodes/fragment/4/position = Vector2( 20, 200 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( -400, 560 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( 20, 420 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 6, 0, 4, 1, 2, 1, 7, 0, 6, 0, 7, 1, 4, 0, 0, 0, 7, 0, 0, 1 )
